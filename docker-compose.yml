version: '3'

services:
  rocketchat:
    env_file: ./server.env
    image: rocketchat/rocket.chat:latest
    restart: unless-stopped
    volumes:
      - ./data/chat/uploads:/app/uploads
      - ./data/chat/emoji:/emoji
    environment:
      - PORT=3000
      #- ROOT_URL=http://localhost/
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      #- ADMIN_USERNAME=
      #- ADMIN_PASS=
      #- ADMIN_EMAIL=
      - LDAP_Enable = True
      - LDAP_Url = localhost
      - LDAP_Port = 389
      - MAIL_URL=smtp://postfix
      - EmojiUpload_Storage_Type=FileSystem
      - EmojiUpload_FileSystemPath=/emoji
#      - HTTP_PROXY=http://proxy.domain.com
#      - HTTPS_PROXY=http://proxy.domain.com
    depends_on:
      - mongo
      - nginx
      #- ldap
    #ports:
    #  - 3000:3000


  mongo:
    image: mongo:3.2
    restart: unless-stopped
    volumes:
     - ./data/db:/data/db
     - ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:3.2
    command: 'mongo mongo/rocketchat --eval "rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})"'
    depends_on:
      - mongo

  #use ldap for auth
  ldap:
    build: ./Dockerfiles/ldap
    volumes:
      - ./data/openldap-data:/var/lib/openldap/openldap-data


  postfix:
    env_file: ./server.env
    build: ./Dockerfiles/postfix
    volumes:
      - ./Dockerfiles/common:/common
    ports:
      - 25:25
      - 587:587
    #depends_on:
    #  - ldap

  imap_srv:
    env_file: ./server.env
    build: ./Dockerfiles/imap_srv
    volumes:
      - ./Dockerfiles/common:/common
    ports:
      - 993:993

  nginx:
    env_file: ./server.env
    build: ./Dockerfiles/nginx
    restart: unless-stopped
    volumes:
      - ./Dockerfiles/common:/common
    ports:
      - 80:80
      - 443:443
    #depends_on:
      #- rocketchat
    #restart: always


  # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
  hubot:
    image: rocketchat/hubot-rocketchat:latest
    restart: unless-stopped
    environment:
      - ROCKETCHAT_URL=rocketchat:3000
      - ROCKETCHAT_ROOM=GENERAL
      - ROCKETCHAT_USER=bot
      - ROCKETCHAT_PASSWORD=botpassword
      - BOT_NAME=bot
  # you can add more scripts as you'd like here, they need to be installable by npm
      - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
    depends_on:
      - rocketchat
    labels:
      - "traefik.enable=false"
    volumes:
      - ./scripts:/home/hubot/scripts
  # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
    ports:
      - 3001:8080
